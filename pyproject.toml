# This dependency file is dependant on the Docker build.
[tool.setuptools.packages.find]
include = ["ai_repo"]

[tool.uv]
package = false

[project]
name = "ai_repo"
authors = [{ name = "Maximilien Le Clei", email = "github.laborer138@passmail.net" }]
description = "AI repository"
version = "0.0.1"
requires-python = "~=3.12"
dependencies = [
    # MANDATORY
    "hydra-core==1.3.2", # Configuration management
    "hydra-zen==0.14.0", # Cleaner Hydra configs
    "beartype==0.21.0", # Dynamic type checking
    "wandb==0.19.11", # Logging
    """
    submitit@git+https://github.com/MaximilienLC/submitit@\
    b51967092af9a58fa548008f56a81beb4431d88a""", # Local & SLURM job launcher
    # Fork that launches `tasks_per_node` through `mpi` rather
    # than the original `submitit` method. For use in `ai_repo/fit/ne/`.
    """
    hydra-submitit-launcher@git+https://github.com/MaximilienLC/hydra@\
    81ab66aede31877bffe7a85bdf9ba6456b91fef5\
    #subdirectory=plugins/hydra_submitit_launcher/""", # Launcher config
    # Fork that implements a `python` argument that connects to the existing
    # `submitit` option. Also modifies the `local` launcher
    # so that it queues the jobs sequentially rather than in parallel.
    # OPTIONAL for ai_repo/
    "matplotlib==3.10.1", # Plotting
    "hydra-optuna-sweeper==1.2.0", # Hyperparameter optimization
    """
    autorl-sweepers@git+https://github.com/MaximilienLC/autorl-sweepers@\
    63e83bc79f6b5708d718b9904c5cda3f4a11cdb5""", # Hyperparameter optimization
    # Fork that removes anything related to `deepcave` due to its conflicts
    # with other dependencies.
    "jaxtyping==0.3.2", # Torch tensor annotations
    "nptyping==2.5.0", # Numpy array annotations
    "einops==0.8.1", # Makes shape transformations more readable
    "jupyterlab==4.4.2", # Jupyter notebook
    "jupyterlab-code-formatter==3.0.2", # Jupyter code formatter
    "ipywidgets==8.1.7", # Jupyter widgets
    "h5py==3.13.0", # HDF5 file format load/save
    "opencv-python==4.11.0.86", # Image processing
    # MANDATORY for ai_repo/fit/dl/
    "lightning==2.5.1.post0", # PyTorch wrapper to decrease boilerplate
    # OPTIONAL for ai_repo/fit/dl/
    "transformers==4.51.3", # Pre-trained models published on Hugging Face
    "diffusers==0.33.1", # Diffusion models published on Hugging Face
    "timm==1.0.15", # Image models
    "datasets==3.6.0", # Datasets published on Hugging Face
    "x-transformers==2.3.1", # Transformer utils
    """
    mambapy@git+https://github.com/alxndrTL/mamba.py@\
    2cc168c78b2494557f45072c4b8daa9d6f5608c7""", # Mamba (latest commit)
    "denoising-diffusion-pytorch==2.1.1", # Diffusion models
    "vector-quantize-pytorch==1.22.16", # Vector quantization utils
    "accelerate==1.6.0", # Not sure what this is for but PEFT crashes w/ 0.30
    "peft==0.15.2", # Fine-tuning
    # fMRI libraries
    "nibabel==5.3.2", # Neuroimaging format accessor
    "nilearn==0.11.1", # ML for neuroimaging
    # Audio libraries
    "librosa==0.11.0",
    # MANDATORY for ai_repo/fitting/neuroevolution/
    "mpi4py==4.0.3", # Inter-process communication
    "torchrl==0.8.0", # For reinforcement/imitation Learning tasks
    "gymnasium[mujoco]==1.1.1", # RL/IL environments
    "ordered-set==4.1.0", # Sets w/ deterministic order
    # MANDATORY for docs/
    "sphinx==8.2.3", # Documentation generator
    "esbonio==0.16.5", # Language server to render sphinx
    "furo==2024.8.6", # Documentation theme
    "sphinx-copybutton==0.5.2", # Copy button for code blocks
    "sphinx-paramlinks==0.6.0", # Links to parameters in other pages
    "sphinx-autodoc-typehints==3.2.0", # More type hint customization
    "myst-parser==4.0.1", # Embeds markdown in sphinx
    # DEVELOPMENT
    "black[jupyter]==25.1.0", # Python Formatter
    "ruff==0.11.8", # Python Linter
    "doc8==1.1.2", # Documentation linter
    "yamllint==1.37.1", # YAML linter
    "pre-commit==4.2.0", # Git commit hooks
    "mypy==1.15.0", # Static type checker
    "pytest==8.3.5", # Testing framework
]

[project.optional-dependencies]
cuda = [
    "torch==2.6.0+cu128",
    "torchaudio==2.6.0+cu128",
    "torchvision==0.21.0+cu128",
]
cpu = [
    "torch==2.6.0",
    "torchaudio==2.6.0",
    "torchvision==0.21.0",
]


[tool.black]
line-length = 79

[tool.ruff]
line-length = 79

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D10", # D10X rules
           # D100 `undocumented-public-module`
           # https://docs.astral.sh/ruff/rules/undocumented-public-module/
           # D101 `undocumented-public-class`
           # https://docs.astral.sh/ruff/rules/undocumented-public-class/
           # D102 `undocumented-public-method`
           # https://docs.astral.sh/ruff/rules/undocumented-public-method/
           # D103 `undocumented-public-function`
           # https://docs.astral.sh/ruff/rules/undocumented-public-function/
           # D104 `undocumented-public-package`
           # https://docs.astral.sh/ruff/rules/undocumented-public-package/
           # D105 `undocumented-magic-method`
           # https://docs.astral.sh/ruff/rules/undocumented-magic-method/
           # D106 `undocumented-public-nested-class`
           # https://docs.astral.sh/ruff/rules/undocumented-public-nested-class/
           # D107 `undocumented-public-init`
           # https://docs.astral.sh/ruff/rules/undocumented-public-init/
           # Disabled to not require writing docstrings for everything.
    "D417", # `undocumented-param`
            # Missing argument description in the docstring for {definition}: {name} Missing docstring in public `__init__`
            # https://docs.astral.sh/ruff/rules/undocumented-param/
            # This warning pops up even when the argument is simply
            # mentioned in the argument section but not given a description.
            # Disabled for flexibility of not giving a description for
    "EXE002", # `shebang-missing-executable-file`
            # The file is executable but no shebang is present
            # https://docs.astral.sh/ruff/rules/shebang-missing-executable-file/
            # Says it's not enforced in WSL, but looks like it is.
    "F722", # `forward-annotation-syntax-error`
            # Syntax error in forward annotation: {body}.
            # https://docs.astral.sh/ruff/rules/forward-annotation-syntax-error/
            # Disabled to be able to utilize Jaxtyping, see:
            # https://docs.kidger.site/jaxtyping/faq/#flake8-or-ruff-are-throwing-an-error
    "G004", # `logging-f-string`
            # Logging statement uses f-string.
            # https://docs.astral.sh/ruff/rules/logging-f-string/
            # Disabled to make it less verbose to log since printing is
            # disabled, see: https://docs.astral.sh/ruff/rules/print/
    "NPY002", # `numpy-legacy-random`
              # Replace legacy np.random.{method_name} call with
              # np.random.Generator
              # Disabled for legacy purposes.
    "S301", # `suspicious-pickle-usage`
            # `pickle` and modules that wrap it can be unsafe when used to
            # deserialize untrusted data, possible security issue
            # https://docs.astral.sh/ruff/rules/suspicious-pickle-usage/
            # Disabled due to current implementation of checkpointing
            # in `ai_repo.fitting.neuroevolution`.
    "TC001", # `typing-only-first-party-import`
              # Move application import {} into a type-checking block
              # https://docs.astral.sh/ruff/rules/typing-only-first-party-import/
              # Disabled as we use Beartype for dynamic type checking.
    "TC002", # `typing-only-third-party-import`
              # Move third-party import {} into a type-checking block
              # https://docs.astral.sh/ruff/rules/typing-only-third-party-import/
              # Disabled as we use Beartype for dynamic type checking.
]


[tool.ruff.lint.pycodestyle]
max-doc-length = 72

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"*_test.py" = [
    "S101",  # `assert`
             # Use of assert detected.
             # https://docs.astral.sh/ruff/rules/assert/
             # Disabled to be able to use assertions in test files.
    "PLR2004", # `magic-value-comparison`
               # Magic value used in comparison, consider replacing {value}
               # with a constant variable.
               # https://docs.astral.sh/ruff/rules/magic-value-comparison/
               # Disabled to be able to use magic values in test files.
]

[tool.doc8]
max-line-length = 79
# docs/index.rst:1: D000 Error in "include" directive:
# invalid option value: (option: "parser"; value: 'myst_parser.sphinx_')
# Parser "myst_parser.sphinx_" not found. No module named 'myst_parser'.
ignore = ["D000"]

[tool.mypy]
strict = true
allow_redefinition = true
ignore_missing_imports = true
